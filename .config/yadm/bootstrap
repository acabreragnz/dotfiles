#!/bin/sh

# Actualizar el sistema
sudo apt update && sudo apt upgrade -y

# Instalar paquetes esenciales
sudo apt install -y git curl zsh fonts-powerline gnome-tweaks

# Instalar oh-my-zsh de manera no interactiva
if [ ! -d "$HOME/.oh-my-zsh" ]; then
    RUNZSH=no sh -c "$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
fi

# Definir la ubicación del directorio de plugins de oh-my-zsh
OH_MY_ZSH_CUSTOM="${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins"

# Función para instalar o reinstalar un plugin
install_plugin() {
  local plugin_name="$1"
  local git_repo="$2"
  local plugin_dir="${OH_MY_ZSH_CUSTOM}/${plugin_name}"

  if [ -d "$plugin_dir" ]; then
    echo "El plugin ${plugin_name} ya está instalado. Reinstalándolo."
    rm -rf "$plugin_dir"
  fi

  git clone "$git_repo" "$plugin_dir"
  echo "Plugin ${plugin_name} clonado correctamente."
}

# Instalar plugins zsh
install_plugin "zsh-syntax-highlighting" "https://github.com/zsh-users/zsh-syntax-highlighting.git"
install_plugin "zsh-autosuggestions" "https://github.com/zsh-users/zsh-autosuggestions.git"

yadm checkout .zshrc
source ~/.zshrc

echo "Instalación de ZSH y plugins completada. Por favor, reinicia tu terminal."

# Instalar NVM, Node.js LTS y configurar el entorno NVM
export NVM_DIR="$HOME/.nvm"
if [ ! -d "$NVM_DIR" ]; then
  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
  \. "$NVM_DIR/nvm.sh"
  nvm install --lts
  nvm alias default node
  echo "NVM y Node.js LTS instalados."
fi

# Instalar la CLI de GitHub si no está ya instalada
if ! command -v gh >/dev/null 2>&1; then
  sudo mkdir -p -m 755 /etc/apt/keyrings
  wget -qO- https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg >/dev/null
  sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg
  echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list >/dev/null
  sudo apt update && sudo apt install gh -y
  echo "GitHub CLI instalada."
fi

# Descargar e instalar aplicaciones de terceros solo si no están ya instaladas
check_and_install_app() {
  local app_name="$1"
  local app_command="$2"
  local download_url="$3"
  local deb_name="$4"

  if ! command -v "$app_command" >/dev/null 2>&1; then
    wget "$download_url" -O "$deb_name" && sudo dpkg -i "$deb_name" && rm "$deb_name"
    echo "$app_name instalado."
  else
    echo "$app_name ya está instalado."
  fi
}

check_and_install_app "Warp" "warp-cli" "https://api.warp.dev/download/deb" "warp.deb"
check_and_install_app "VSCode" "code" "https://update.code.visualstudio.com/latest/linux-deb-x64/stable" "vscode.deb"
check_and_install_app "Google Chrome" "google-chrome" "https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb" "chrome.deb"

# Corregir posibles dependencias faltantes después de la instalación
sudo apt install -f -y

# Limpiar archivos temporales y la caché de apt
sudo apt autoremove -y
sudo apt autoclean -y
echo "Limpieza de sistema completada."

echo "Instalación completada."
